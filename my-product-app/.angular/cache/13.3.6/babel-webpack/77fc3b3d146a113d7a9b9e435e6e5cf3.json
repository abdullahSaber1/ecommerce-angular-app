{"ast":null,"code":"import _asyncToGenerator from \"/home/abdallah/Documents/angular/my-product-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.baseUrl = 'http://localhost:3005/products';\n    this.subject = new Subject();\n    this.productSubject = new Subject();\n    this.products = [];\n    this.isActive = false;\n  }\n\n  getProducts() {\n    var _this = this;\n\n    this.httpClient.get(this.baseUrl).subscribe( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (products) {\n        console.log(products);\n        _this.products = yield [...products];\n        _this.filterProducts = [..._this.products];\n      });\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n    return this.products;\n  }\n\n  getProduct(id) {\n    return this.products.find(product => product.id === id);\n  }\n\n  contolStatusCart() {\n    this.isActive = !this.isActive;\n    this.subject.next(this.isActive);\n  }\n\n  getCartStatus() {\n    return this.subject.asObservable();\n  }\n\n  searchProduct(text) {\n    this.filterProducts = [...this.products];\n\n    if (text) {\n      this.filterProducts = this.filterProducts.filter(product => {\n        return product.title.toLowerCase().includes(text.toLowerCase());\n      });\n    }\n\n    this.productSubject.next(this.filterProducts);\n  }\n\n  searchResult() {\n    return this.productSubject.asObservable();\n  }\n\n}\n\nProductService.ɵfac = function ProductService_Factory(t) {\n  return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nProductService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductService,\n  factory: ProductService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["/home/abdallah/Documents/angular/my-product-app/src/app/services/product-service.service.ts"],"names":["Subject","i0","i1","ProductService","constructor","httpClient","baseUrl","subject","productSubject","products","isActive","getProducts","get","subscribe","console","log","filterProducts","getProduct","id","find","product","contolStatusCart","next","getCartStatus","asObservable","searchProduct","text","filter","title","toLowerCase","includes","searchResult","ɵfac","ProductService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,SAASA,OAAT,QAAwB,MAAxB;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,OAAO,MAAMC,cAAN,CAAqB;AACxBC,EAAAA,WAAW,CAACC,UAAD,EAAa;AACpB,SAAKA,UAAL,GAAkBA,UAAlB;AACA,SAAKC,OAAL,GAAe,gCAAf;AACA,SAAKC,OAAL,GAAe,IAAIP,OAAJ,EAAf;AACA,SAAKQ,cAAL,GAAsB,IAAIR,OAAJ,EAAtB;AACA,SAAKS,QAAL,GAAgB,EAAhB;AACA,SAAKC,QAAL,GAAgB,KAAhB;AACH;;AACDC,EAAAA,WAAW,GAAG;AAAA;;AACV,SAAKN,UAAL,CAAgBO,GAAhB,CAAoB,KAAKN,OAAzB,EAAkCO,SAAlC;AAAA,mCAA4C,WAAOJ,QAAP,EAAoB;AAC5DK,QAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACA,QAAA,KAAI,CAACA,QAAL,SAAsB,CAAC,GAAGA,QAAJ,CAAtB;AACA,QAAA,KAAI,CAACO,cAAL,GAAsB,CAAC,GAAG,KAAI,CAACP,QAAT,CAAtB;AACH,OAJD;;AAAA;AAAA;AAAA;AAAA;AAKA,WAAO,KAAKA,QAAZ;AACH;;AACDQ,EAAAA,UAAU,CAACC,EAAD,EAAK;AACX,WAAO,KAAKT,QAAL,CAAcU,IAAd,CAAmBC,OAAO,IAAIA,OAAO,CAACF,EAAR,KAAeA,EAA7C,CAAP;AACH;;AACDG,EAAAA,gBAAgB,GAAG;AACf,SAAKX,QAAL,GAAgB,CAAC,KAAKA,QAAtB;AACA,SAAKH,OAAL,CAAae,IAAb,CAAkB,KAAKZ,QAAvB;AACH;;AACDa,EAAAA,aAAa,GAAG;AACZ,WAAO,KAAKhB,OAAL,CAAaiB,YAAb,EAAP;AACH;;AACDC,EAAAA,aAAa,CAACC,IAAD,EAAO;AAChB,SAAKV,cAAL,GAAsB,CAAC,GAAG,KAAKP,QAAT,CAAtB;;AACA,QAAIiB,IAAJ,EAAU;AACN,WAAKV,cAAL,GAAsB,KAAKA,cAAL,CAAoBW,MAApB,CAA2BP,OAAO,IAAI;AACxD,eAAOA,OAAO,CAACQ,KAAR,CAAcC,WAAd,GAA4BC,QAA5B,CAAqCJ,IAAI,CAACG,WAAL,EAArC,CAAP;AACH,OAFqB,CAAtB;AAGH;;AACD,SAAKrB,cAAL,CAAoBc,IAApB,CAAyB,KAAKN,cAA9B;AACH;;AACDe,EAAAA,YAAY,GAAG;AACX,WAAO,KAAKvB,cAAL,CAAoBgB,YAApB,EAAP;AACH;;AAtCuB;;AAwC5BrB,cAAc,CAAC6B,IAAf,GAAsB,SAASC,sBAAT,CAAgCC,CAAhC,EAAmC;AAAE,SAAO,KAAKA,CAAC,IAAI/B,cAAV,EAA0BF,EAAE,CAACkC,QAAH,CAAYjC,EAAE,CAACkC,UAAf,CAA1B,CAAP;AAA+D,CAA1H;;AACAjC,cAAc,CAACkC,KAAf,GAAuB,aAAcpC,EAAE,CAACqC,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAEpC,cAAT;AAAyBqC,EAAAA,OAAO,EAAErC,cAAc,CAAC6B,IAAjD;AAAuDS,EAAAA,UAAU,EAAE;AAAnE,CAAtB,CAArC","sourcesContent":["import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductService {\n    constructor(httpClient) {\n        this.httpClient = httpClient;\n        this.baseUrl = 'http://localhost:3005/products';\n        this.subject = new Subject();\n        this.productSubject = new Subject();\n        this.products = [];\n        this.isActive = false;\n    }\n    getProducts() {\n        this.httpClient.get(this.baseUrl).subscribe(async (products) => {\n            console.log(products);\n            this.products = await [...products];\n            this.filterProducts = [...this.products];\n        });\n        return this.products;\n    }\n    getProduct(id) {\n        return this.products.find(product => product.id === id);\n    }\n    contolStatusCart() {\n        this.isActive = !this.isActive;\n        this.subject.next(this.isActive);\n    }\n    getCartStatus() {\n        return this.subject.asObservable();\n    }\n    searchProduct(text) {\n        this.filterProducts = [...this.products];\n        if (text) {\n            this.filterProducts = this.filterProducts.filter(product => {\n                return product.title.toLowerCase().includes(text.toLowerCase());\n            });\n        }\n        this.productSubject.next(this.filterProducts);\n    }\n    searchResult() {\n        return this.productSubject.asObservable();\n    }\n}\nProductService.ɵfac = function ProductService_Factory(t) { return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient)); };\nProductService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: ProductService, factory: ProductService.ɵfac, providedIn: 'root' });\n"]},"metadata":{},"sourceType":"module"}